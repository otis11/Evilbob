/* This file is generated by **scripts/generate-code.ts**. Do not modify by hand.  */
import { browserName } from "./platform";
export const PLUGIN_LIST = [
	{
		id: "focus-active-input",
		name: "Focus Input",
		file: "/plugins/focus-active-input.js",
	},
	{
		id: "on-blur-close-window",
		name: "On blur close bob window",
		file: "/plugins/on-blur-close-window.js",
	},
	{
		id: "bob-dark-theme",
		name: "Bob dark theme",
		file: "/plugins/bob-dark-theme.js",
	},
	{
		id: "window",
		prefix: "win",
		name: "Window",
		description:
			"Interact with chrome windows, for instance 'close other windows'",
		file: "/plugins/window.js",
	},
	{
		id: "history",
		permissions: ["history"],
		prefix: "h",
		name: "History",
		description: "Search & interact with browser history.",
		file: "/plugins/history.js",
	},
	{
		id: "bob-light-theme",
		name: "Bob light theme",
		file: "/plugins/bob-light-theme.js",
	},
	{
		id: "bob-results",
		prefix: "bob",
		name: "Bob",
		description:
			"Internal Bob commands like open settings, reset settings ...",
		file: "/plugins/bob-results.js",
	},
] as BobPluginMeta[];
export const PLUGIN_LIST_SUPPORTED = (() => {
	return PLUGIN_LIST.filter((plugin) => {
		return plugin.supportedBrowsers
			? plugin.supportedBrowsers?.includes(browserName)
			: true;
	});
})();

export const PLUGIN_LIST_THEMES = (() => {
	return PLUGIN_LIST_SUPPORTED.filter((plugin) => {
		return plugin.providesTheme;
	});
})();

export const PLUGIN_LIST_RESULTS = (() => {
	return PLUGIN_LIST_SUPPORTED.filter((plugin) => {
		return plugin.providesResults;
	});
})();

export const PLUGIN_LIST_CONFIGS = (() => {
	return PLUGIN_LIST_SUPPORTED.filter((plugin) => {
		return plugin.providesConfig;
	});
})();

export type BobPluginMeta = {
	id: string;
	name: string;
	file: string;
	prefix?: string;
	permissions?: string[];
	hostPermissions?: string[];
	description?: string;
	supportedBrowsers?: string[];
	providesTheme: boolean;
	providesResults: boolean;
	providesConfig: boolean;
};
